{
    // Place your snippets for rust here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Rust standard derive trait": {
        "prefix": "derive",
        "body": [
            "#[derive($0, Debug, Clone, PartialEq, Eq, Hash, Default)]"
        ],
        "description": "Derive basic traits."
    },
    "Bevy plugin": {
        "prefix": "plugin",
        "body": [
            "mod bundles;",
            "mod components;",
            "mod resources;",
            "mod systems;",
            "",
            "pub(super) struct ${1:MyPlugin};",
            "",
            "impl Plugin for $1 {",
            "    fn build(&self, app: &mut bevy::prelude::App) {",
            "        todo!()",
            "    }",
            "}",
            "$0"
        ],
        "description": "Create a new Bevy plugin."
    },
    "Bevy states": {
        "prefix": "states",
        "body": [
            "#[derive(States, Debug, Clone, PartialEq, Eq, Hash, Default)]",
            "enum ${1:MyStates} {",
            "    #[default]",
            "    ",
            "}",
            "$0"
        ],
        "description": "Create new Bevy states."
    },
    "Bevy component": {
        "prefix": "component",
        "body": [
            "#[derive(Component, Debug, Clone, PartialEq, Eq, Hash, Default)]",
            "pub(super) struct ${1:MyComponent} {}",
            "$0"
        ],
        "description": "Create a new Bevy component."
    },
    "Bevy setup system": {
        "prefix": "setup",
        "body": [
            "pub(super) fn setup(world: &mut World) {",
            "    ${1:todo!()}",
            "}",
        ],
        "description": "Create a new Bevy setup system."
    },
    "Bevy resource": {
        "prefix": "resource",
        "body": [
            "#[derive(Resource, Debug, Clone, PartialEq, Eq, Hash, Default)]",
            "pub(super) struct ${1:MyResource} {}",
        ],
        "description": "Create a new Bevy setup system."
    }
}